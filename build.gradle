import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'com.henryfabio'
version = '2.0.3-SNAPSHOT'

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

install {
    repositories {
        mavenInstaller {
            pom.version = '0.0.1-maven-SNAPSHOT'
            pom.groupId = 'com.baeldung.sample'
            pom.artifactId = 'gradle-maven-converter'
        }
    }
}

repositories {
    mavenCentral()

    maven { url = 'https://mvn.exceptionflug.de/repository/exceptionflug-public/' }
    maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
}

dependencies {
    def bungee = 'net.md-5:bungeecord-api:1.17-R0.1-SNAPSHOT'
    def ptclapi = 'de.exceptionflug:protocolize-api:1.7.1-SNAPSHOT'
    def ptclitem = 'de.exceptionflug:protocolize-items:1.7.1-SNAPSHOT'
    def ptclinventory = 'de.exceptionflug:protocolize-inventory:1.7.1-SNAPSHOT'
    def ptclworld = 'de.exceptionflug:protocolize-world:1.7.1-SNAPSHOT'

    compileOnly bungee
    testCompileOnly bungee
    compileOnly ptclapi
    testCompileOnly ptclapi
    compileOnly ptclitem
    testCompileOnly ptclitem
    compileOnly ptclinventory
    testCompileOnly ptclinventory
    compileOnly ptclworld
    testCompileOnly ptclworld

    api 'org.jetbrains:annotations:22.0.0'

    def lombok = 'org.projectlombok:lombok:1.18.20'
    compileOnly lombok
    annotationProcessor lombok

    testCompileOnly lombok
    testAnnotationProcessor lombok
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        filter ReplaceTokens, tokens: [version: version]
    }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.0.0'
    }
}

def defaultJarName = project.name + '-' + project.version

shadowJar {
    archiveName("${defaultJarName}.jar")
}
tasks.build.dependsOn shadowJar

task buildTest(type: Jar) {
    from sourceSets.main.output
    from sourceSets.test.output
}
